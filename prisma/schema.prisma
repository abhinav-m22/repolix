// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    output          = "../node_modules/.prisma/client"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider   = "postgresql"
    url        = env("DATABASE_URL")
    extensions = [vector]
}

model User {
    id        String   @id @default(cuid())
    email     String?  @unique
    password  String?
    imageUrl  String?
    firstName String?
    lastName  String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    credits   Int      @default(100)

    UserProject UserProject[]

    questionsAsked Question[]

    stripeTransactions StripeTransaction[]
}

model Project {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name        String
    githubUrl   String
    githubToken String?

    deletedAt DateTime?

    UserProject UserProject[]
    commits     Commit[]

    sourceCodeEmbeddings SourceCodeEmbedding[]

    savedQuestions Question[]
}

model UserProject {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    userId    String
    projectId String

    user    User    @relation(fields: [userId], references: [id])
    project Project @relation(fields: [projectId], references: [id])

    @@unique([userId, projectId])
}

model Commit {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    projectId String
    project   Project @relation(fields: [projectId], references: [id])

    message         String
    hash            String
    authorName      String
    authorAvatarUrl String
    date            DateTime

    // AI generated summary
    summary String
}

model SourceCodeEmbedding {
    id String @id @default(cuid())

    summaryEmbedding Unsupported("vector(768)")?
    sourceCode       String
    fileName         String
    summary          String

    projectId String
    project   Project @relation(fields: [projectId], references: [id])
}

model Question {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    question String
    answer   String

    fileReferences Json?

    projectId String
    project   Project @relation(fields: [projectId], references: [id])

    userId String
    user   User   @relation(fields: [userId], references: [id])
}

model StripeTransaction {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    userId String
    user   User   @relation(fields: [userId], references: [id])

    credits Int
}
